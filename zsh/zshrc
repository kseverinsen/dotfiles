#
# User configuration sourced by interactive shells
#

# Source zim
if [[ -s ${ZDOTDIR:-${HOME}}/.zim/init.zsh ]]; then
  source ${ZDOTDIR:-${HOME}}/.zim/init.zsh
fi

# Virtualenv wrapper
export WORKON_HOME=$HOME/.virtualenvs
source ~/.local/bin/virtualenvwrapper.sh
#if [[ $(command -v virtualenvwrapper_lazy.sh) ]]; then
#  source virtualenvwrapper_lazy.sh
#fi

# Neovim aliases
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
  alias :e='nvim'
  alias :E='nvim .'
fi

# set EDITOR='nvim-client -f' # for git?

alias :q='exit'

# fasd aliases
alias v='f -e nvim' # quick opening files with vim
alias o='a -e xdg-open' # quick opening files with xdg-open

# Base16 Shell TODO not working on konsole
#BASE16_SHELL="$HOME/.config/base16-shell/base16-default.dark.sh"
#[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [ -x "$(command -v ag)" ]; then
  # Set ag as the default source for fzf (respect .gitignore etc)
  export FZF_DEFAULT_COMMAND='ag -l -g ""'
  # To apply the command to CTRL-T as well
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

  # For zsh {cmd} **<tab> completion
  # Use ag instead of the default find command for listing candidates.
  # - The first argument to the function is the base path to start traversal
  # - Note that ag only lists files not directories
  # - See the source code (completion.{bash,zsh}) for the details.
  _fzf_compgen_path() {
    ag -g "" "$1"
  }
fi

function diff {
  if (( $+commands[colordiff] )); then
    command diff --unified "$@" | colordiff --difftype diffu
  elif (( $+commands[git] )); then
    git --no-pager diff --color=auto --no-ext-diff --no-index "$@"
  else
    command diff --unified "$@"
  fi
}

function make {
  if (( $+commands[colormake] )); then
    colormake "$@"
  else
    command make "$@"
  fi
}

# Colorize man pages
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m")\
    LESS_TERMCAP_md=$(printf "\e[1;31m")\
    LESS_TERMCAP_me=$(printf "\e[0m")\
    LESS_TERMCAP_se=$(printf "\e[0m")\
    LESS_TERMCAP_so=$(printf "\e[1;44;33m")\
    LESS_TERMCAP_ue=$(printf "\e[0m")\
    LESS_TERMCAP_us=$(printf "\e[1;32m")\
    man "$@"
}

function docker_ip() {
    local container_id=$(docker ps | grep $1 | awk '{print $ 1}' | tail -n 1)

    if [ $container_id ]; then
        docker inspect $container_id \
            | grep -w "IPAddress" \
            | awk '{ print $2 }' \
            | tail -n 1
    else
        echo 'Unknown container' $1 1>&2
        return 1
    fi
}
